# MCU class and specific type
MCU STM32F4xx STM32F405xx

# board ID for firmware load
APJ_BOARD_ID 1444

# crystal frequency
OSCILLATOR_HZ 16000000

define STM32_ST_USE_TIMER 4
define CH_CFG_ST_RESOLUTION 16

FLASH_SIZE_KB 1024
include ../include/minimal.inc

FLASH_RESERVE_START_KB 64

# LEDs
PC13 LED_BLUE OUTPUT LOW GPIO(0)
PC14 LED_GREEN OUTPUT LOW GPIO(1)

SERIAL_ORDER OTG1 USART1
# UARTs
PA9  USART1_TX USART1 SPEED_HIGH NODMA
PA10 USART1_RX USART1 SPEED_HIGH NODMA

# PA2 USART2_TX USART2 SPEED_HIGH NODMA
# PA3 USART2_RX USART2 SPEED_HIGH NODMA

# PA0 UART4_TX UART4 SPEED_HIGH NODMA
# PA1 UART4_RX UART4 SPEED_HIGH NODMA

# PC6 USART6_TX USART6 SPEED_HIGH NODMA
# PC7 USART6_RX USART6 SPEED_HIGH NODMA

# spi
PA5 SPI1_SCK SPI1
PA6 SPI1_MISO SPI1
PA7 SPI1_MOSI SPI1

# usb
PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1

# sd
# PC8 SDIO_D0 SDIO
# PC9 SDIO_D1 SDIO
# PC10 SDIO_D2 SDIO
# PC11 SDIO_D3 SDIO
# PC12 SDIO_CK SDIO
# PD2 SDIO_CMD SDIO

# spi cs
PC5 MPU_CS CS
PC4 BARO_CS CS

SPIDEV ms5611         SPI1 DEVID3  BARO_CS      MODE3 20*MHZ 20*MHZ
SPIDEV mpu9250        SPI1 DEVID4  MPU_CS       MODE3  4*MHZ  8*MHZ

# define HAL_OS_FATFS_IO 1

CHECK_MPU9250           spi_check_register("mpu9250", MPUREG_WHOAMI, MPU_WHOAMI_MPU9250)
CHECK_MS5611            check_ms5611("ms5611")
CHECK_IMU0_PRESENT   $CHECK_MPU9250
CHECK_BARO0_PRESENT  $CHECK_MS5611
BOARD_VALIDATE #$CHECK_IMU0_PRESENT #$CHECK_BARO0_PRESENT


define HAL_USE_ADC TRUE
define STM32_ADC_USE_ADC1 TRUE

define HAL_DISABLE_ADC_DRIVER TRUE

PC0 BATT_VOLTAGE_SENS ADC1 SCALE(1)
PC1 BATT_CURRENT_SENS ADC1 SCALE(1)


define HAL_CHIBIOS_ARCH_PINGUIN0 1

define HAL_CHIBIOS_ARCH_FMUV3 1

# define HAL_BOARD_LOG_DIRECTORY "/APM/LOGS"
# define HAL_BOARD_TERRAIN_DIRECTORY "/APM/TERRAIN"

# We need to tell HAL_ChibiOS/Storage.cpp how much storage is
# available (in bytes).
define HAL_STORAGE_SIZE 15360
STORAGE_FLASH_PAGE 2
